Retrieve the HTML Element: Use document.getElementById to access the desired HTML element.

tsx
Copy
Edit
const element = document.getElementById('yourElementId');
if (!element) return;
Inline All Styles: To ensure that all CSS styles are preserved in the Word document, convert all computed styles to inline styles.

tsx
Copy
Edit
const inlineAllStyles = (element: HTMLElement): HTMLElement => {
  const clone = element.cloneNode(true) as HTMLElement;
  const traverse = (node: HTMLElement) => {
    const computedStyle = window.getComputedStyle(node);
    const style: Partial<CSSStyleDeclaration> = {};
    for (let i = 0; i < computedStyle.length; i++) {
      const prop = computedStyle[i];
      style[prop] = computedStyle.getPropertyValue(prop);
    }
    Object.assign(node.style, style);
    Array.from(node.children).forEach((child) => traverse(child as HTMLElement));
  };
  traverse(clone);
  return clone;
};
Construct the Word Document Content: Wrap the inlined HTML content with necessary Word-specific HTML headers and styles.

tsx
Copy
Edit
const header = `
  <html xmlns:o='urn:schemas-microsoft-com:office:office' 
        xmlns:w='urn:schemas-microsoft-com:office:word' 
        xmlns='http://www.w3.org/TR/REC-html40'>
  <head><meta charset='utf-8'><title>Export HTML to Word</title></head><body>`;
const footer = '</body></html>';
const inlinedElement = inlineAllStyles(element);
const htmlContent = header + inlinedElement.outerHTML + footer;
Create and Download the Word Document: Convert the HTML content to a Blob and trigger a download.

tsx
Copy
Edit
const blob = new Blob(['\ufeff', htmlContent], {
  type: 'application/msword',
});
const url = URL.createObjectURL(blob);
const link = document.createElement('a');
link.href = url;
link.download = 'document.doc';
document.body.appendChild(link);
link.click();
document.body.removeChild(link);
URL.revokeObjectURL(url);